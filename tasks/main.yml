---
- name: Setup & Pre-requisites to install kubernetes
  block: 
    - name: Make sure the br_netfilter module is loaded
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: Node's iptables to see bridged traffic
      sysctl:
        name: "{{ item }}"
        value: "1"
        sysctl_set: yes
        state: present
        reload: yes
      loop: 
        - net.bridge.bridge-nf-call-ip6tables
        - net.bridge.bridge-nf-call-iptables

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

- name: Install kubeadm to create a kubernetes cluster
  block:
  - name: Add repo kubernetes from gcp for Debian based
    include_tasks: add-repo-debian.yaml
    when: ansible_facts['os_family'] == 'Debian'
  
  - name: Add repo kubernetes from gcp for Redhat based
    include_tasks: add-repo-debian.yaml
    when: ansible_facts['os_family'] == 'RedHat'

  - name: Install Kubernetes binaries
    package: 
      name: "{{ item }}"
      state: present
      update_cache: yes
    loop:
      - kubelet 
      - kubeadm 
      - kubectl

- name: Apply iptables rules for kubernetes
  block: 
    
    - name: Add rules for Kubernetes on RedHat based
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
        zone: public
      loop: 
        - 6443/tcp # Kubernetes API server
        - 2379-2380/tcp # etcd server client API
        - 10250/tcp # Kubelet API
        - 10259/tcp # kube-scheduler
        - 10257/tcp # kube-controller-manager
        - 30000-32767/tcp # NodePort Services
      notify: 
        - Reload firewalld
      when: ansible_facts['os_family'] == 'RedHat'
    
    - name: Add rules for Kubernetes on Debian based
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop: 
        - "6443" # Kubernetes API server
        - "2379:2380" # etcd server client API
        - "10250" # Kubelet API
        - "10259" # kube-scheduler
        - "10257" # kube-controller-manager
        - "30000:32767" # NodePort Services

- name: Start Kubelet service
  service:
    name: kubelet
    daemon_reload: yes
    enabled: yes
    state: started